package com.example.demo.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import com.example.demo.dao.UserDao;
import com.example.demo.dto.UserDto;

import jakarta.servlet.http.HttpSession;

@Service
public class UserService {

	@Autowired
    private UserDao uDao;
	
	//비밀번호 암호화를 위한 인코더 객체
    private BCryptPasswordEncoder pEncoder = new BCryptPasswordEncoder();
	
	public String insertUser(UserDto user, RedirectAttributes rttr) {		
		String view = null;
        String msg = null;
        
        //비밀번호 암호화 처리
        String encpwd = pEncoder.encode(user.getUserPw());
        System.out.println("####encpwd: " + encpwd);        
        //평문인 비밀번호를 암호문으로 덮어씀.
        user.setUserPw(encpwd);
        
		try {
			System.out.println("@@@@insertUser()");
            uDao.insertUser(user);             
            view = "redirect:/login";
            msg = "가입 성공";
        } catch (Exception e){
            e.printStackTrace();
            msg = "가입 실패";
        }
        rttr.addFlashAttribute("msg", msg);
		return view;
	}

//	public String loginProc(UserDto user, HttpSession session, RedirectAttributes rttr) {
//		String view = null;
//		String msg = null;
//		
//		return null;
//	}
	
}
